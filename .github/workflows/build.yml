name: build

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - name: Login DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login GitHub
        uses: docker/login-action@v1
        with:
          username: ${{ github.repository_owner }}
          password: ${{ GITHUB_TOKEN }}
      - name: Set version info
        id: version
        run: |
          echo "::set-output name=version::${GITHUB_REF##*/v}"
          echo "::set-output name=commit::$(git rev-parse --short HEAD)"

      - uses: docker/metadata-action@v3
        id: ubuntu
        with:
          images: macrat/ayd
          flavor: |
            latest=false
          tags: |
            type=semver,pattern=ubuntu-latest
            type=semver,pattern=ubuntu-{{version}}
            type=semver,pattern=ubuntu-{{major}}.{{minor}}
            type=semver,pattern=ghcr.io/${{ github.repository_owner }}/ubuntu-latest
            type=semver,pattern=ghcr.io/${{ github.repository_owner }}/ubuntu-{{version}}
            type=semver,pattern=ghcr.io/${{ github.repository_owner }}/ubuntu-{{major}}.{{minor}}
      - uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.ubuntu.outputs.tags }}
          labels: ${{ steps.ubuntu.outputs.labels }}
          build-args: |
            BASE_IMAGE=ubuntu
            VERSION=${{ steps.version.outputs.version }}
            COMMIT=${{ steps.version.outputs.commit }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - uses: docker/metadata-action@v3
        id: alpine
        with:
          images: macrat/ayd
          flavor: |
            latest=true
          tags: |
            type=semver,pattern=alpine-latest
            type=semver,pattern=alpine-{{version}}
            type=semver,pattern=alpine-{{major}}.{{minor}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern=ghcr.io/${{ github.repository_owner }}/alpine-latest
            type=semver,pattern=ghcr.io/${{ github.repository_owner }}/alpine-{{version}}
            type=semver,pattern=ghcr.io/${{ github.repository_owner }}/alpine-{{major}}.{{minor}}
            type=semver,pattern=ghcr.io/${{ github.repository_owner }}/{{version}}
            type=semver,pattern=ghcr.io/${{ github.repository_owner }}/{{major}}.{{minor}}
      - uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.alpine.outputs.tags }}
          labels: ${{ steps.alpine.outputs.labels }}
          build-args: |
            BASE_IMAGE=alpine
            VERSION=${{ steps.version.outputs.version }}
            COMMIT=${{ steps.version.outputs.commit }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - uses: docker/metadata-action@v3
        id: scratch
        with:
          images: macrat/ayd
          flavor: |
            latest=false
          tags: |
            type=semver,pattern=scratch-latest
            type=semver,pattern=scratch-{{version}}
            type=semver,pattern=scratch-{{major}}.{{minor}}
            type=semver,pattern=ghcr.io/${{ github.repository_owner }}/scratch-latest
            type=semver,pattern=ghcr.io/${{ github.repository_owner }}/scratch-{{version}}
            type=semver,pattern=ghcr.io/${{ github.repository_owner }}/scratch-{{major}}.{{minor}}
      - uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.scratch.outputs.tags }}
          labels: ${{ steps.scratch.outputs.labels }}
          build-args: |
            BASE_IMAGE=scratch
            VERSION=${{ steps.version.outputs.version }}
            COMMIT=${{ steps.version.outputs.commit }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
